openapi: 3.0.0
info:
  title: API do Sistema Escolar
  version: 1.0.0
  description: Documentação da API para gerenciamento de presenças dos alunos.

servers:
  - url: http://localhost:8080

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/presenca:
    get:
      summary: Retorna as presenças dentro do intervalo de datas
      description: >
        Retorna todas as presenças registradas entre as datas `inicio` e `fim` recebidas via query parameters.  
        Exemplo de uso: `http://localhost:3000/api/presenca?inicio=2025-02-10&fim=2025-02-20`
      parameters:
        - name: inicio
          in: query
          description: Data inicial no formato `YYYY-MM-DD`
          required: true
          schema:
            type: string
            format: date
            example: 2025-02-10
        - name: fim
          in: query
          description: Data final no formato `YYYY-MM-DD`
          required: true
          schema:
            type: string
            format: date
            example: 2025-02-20
      x-codeSamples:
        - lang: Curl
          label: Exemplo com datas
          source: |
            curl -X GET "http://localhost:3000/api/presenca?inicio=2025-02-10&fim=2025-02-20" -H "Authorization: Bearer <seu_token>"
      responses:
        '200':
          description: Lista de presenças retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    aluno_id:
                      type: integer
                      example: 10
                    data_presenca:
                      type: string
                      format: date
                      example: 2025-02-15
                    status:
                      type: string
                      example: presente
        '400':
          description: Parâmetros `inicio` ou `fim` ausentes ou inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: 'Parâmetros "inicio" e "fim" são obrigatórios'
        '500':
          description: Erro interno no servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: 'Erro interno ao buscar presenças'
      security:
        - bearerAuth: []


    /api/presenca/aluno/{id}:
    get:
      summary: Consulta presença de um aluno em uma data específica
      description: >
        Retorna o registro de presença do aluno identificado pelo ID para a data informada na query string.  
        Exemplo de uso: `http://localhost:3000/api/presenca/aluno/1?data=2025-06-23`
      parameters:
        - name: id
          in: path
          description: ID do aluno
          required: true
          schema:
            type: integer
            example: 10
        - name: data
          in: query
          description: Data para consulta da presença no formato `YYYY-MM-DD`
          required: true
          schema:
            type: string
            format: date
            example: 2025-06-23
      x-codeSamples:
        - lang: Curl
          label: Exemplo com ID e data
          source: |
            curl -X GET "http://localhost:3000/api/presenca/aluno/1?data=2025-06-23" -H "Authorization: Bearer <seu_token>"
      responses:
        '200':
          description: Presença do aluno retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  id_aluno:
                    type: integer
                    example: 10
                  data_presenca:
                    type: string
                    format: date
                    example: 2025-06-23
                  status:
                    type: string
                    example: presente
        '400':
          description: Parâmetro `data` ausente na query
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: 'O parâmetro "data" é obrigatório na query'
        '404':
          description: Presença não encontrada para este aluno na data informada
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: 'Presença não encontrada para este aluno nesta data'
        '500':
          description: Erro interno no servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: 'Erro interno ao buscar presença do aluno'
      security:
        - bearerAuth: []

  /api/presenca:
    post:
      summary: Registra presença de um aluno
      description: Insere um registro de presença para um aluno em uma data específica com status de presença e observação opcional.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_aluno
                - data_presenca
                - presente
              properties:
                id_aluno:
                  type: integer
                  description: ID do aluno
                  example: 10
                data_presenca:
                  type: string
                  format: date
                  description: Data da presença no formato YYYY-MM-DD
                  example: 2025-06-23
                presente:
                  type: boolean
                  description: Indica se o aluno esteve presente (true) ou ausente (false)
                  example: true
                observacao:
                  type: string
                  description: Observações adicionais (opcional)
                  example: "Chegou atrasado"
      responses:
        '201':
          description: Presença inserida com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Presença inserida com sucesso
                  presenca:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      id_aluno:
                        type: integer
                        example: 10
                      data_presenca:
                        type: string
                        format: date
                        example: 2025-06-23
                      presente:
                        type: boolean
                        example: true
                      observacao:
                        type: string
                        nullable: true
                        example: Chegou atrasado
        '400':
          description: Campos obrigatórios ausentes
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Campos obrigatórios: id_aluno, data_presenca, presente
        '409':
          description: Registro de presença já existente para esse aluno na data
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Presença para este aluno nessa data já existe
        '500':
          description: Erro interno no servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Erro interno ao inserir presença
      security:
        - bearerAuth: []

  /api/presenca/{alunoId}:
    put:
      summary: Atualiza dados de presença de um aluno em uma data específica
      description: >
        Atualiza o registro de presença do aluno identificado pelo ID na URL e pela data informada na query.  
        Os campos `presente`, `observacao` e `nova_data` são opcionais e só serão atualizados se fornecidos.  
        Exemplo de uso: `http://localhost:3000/api/presenca/2?data=2025-02-15`
      parameters:
        - name: alunoId
          in: path
          description: ID do aluno cujo registro de presença será atualizado
          required: true
          schema:
            type: integer
            example: 2
        - name: data
          in: query
          description: Data da presença que será atualizada (formato YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
            example: 2025-02-15
      x-codeSamples:
        - lang: Curl
          label: Exemplo com PUT
          source: |
            curl -X PUT "http://localhost:3000/api/presenca/2?data=2025-02-15" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer <seu_token>" \
            -d '{"presente": false, "observacao": "Faltou com justificativa"}'

  /api/presenca/{alunoId}:
    delete:
      summary: Deleta o registro de presença de um aluno em uma data específica
      description: Deleta o registro de presença do aluno identificado pelo ID na URL e pela data informada na query.
      parameters:
        - name: alunoId
          in: path
          description: ID do aluno cujo registro de presença será deletado
          required: true
          schema:
            type: integer
            example: 10
        - name: data
          in: query
          description: Data da presença que será deletada (formato YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
            example: 2025-06-23
      responses:
        '200':
          description: Presença deletada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensagem:
                    type: string
                    example: Presença deletada com sucesso
        '400':
          description: Parâmetro "data" na query obrigatório não informado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Parâmetro "data" na query obrigatório
        '404':
          description: Presença não encontrada para o aluno e data informados
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Presença não encontrada para este aluno e data
        '500':
          description: Erro interno ao deletar presença
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: Erro interno ao deletar presença
      security:
        - bearerAuth: []
